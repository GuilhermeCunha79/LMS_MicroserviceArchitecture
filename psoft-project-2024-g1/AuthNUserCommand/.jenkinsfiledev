// .jenkinsfiledev

return {
    stage('Checkout') {
        steps {
            git url: 'https://1201506@bitbucket.org/1201506/arqsoft-25-1201506-1211439.git',
                credentialsId: 'jenkins_1201506', branch: 'feature/recommendation'
        }
    }

    stage('Clean + Build') {
        steps {
            script {
                dir(POM_LOC) {
                    if (isUnix()) {
                        sh 'mvn clean compile test-compile'
                    } else {
                        bat 'mvn clean compile test-compile'
                    }
                }
            }
        }
    }

    stage('Unit + Integration Testing') {
        parallel {
            stage('Unit Testing') {
                steps {
                    script {
                        dir(POM_LOC) {
                            if (isUnix()) {
                                sh 'mvn surefire:test'
                            } else {
                                bat 'mvn surefire:test'
                            }
                        }
                    }
                }
            }

            stage('Integration Testing') {
                steps {
                    script {
                        dir(POM_LOC) {
                            if (isUnix()) {
                                sh 'mvn failsafe:integration-test failsafe:verify'
                            } else {
                                bat 'mvn failsafe:integration-test failsafe:verify'
                            }
                        }
                    }
                }
            }
        }
    }

    stage('Checkstyle') {
        steps {
            script {
                dir(POM_LOC) {
                    if (isUnix()) {
                        sh 'mvn checkstyle:checkstyle -Dcheckstyle.failOnViolation=false'
                    } else {
                        bat 'mvn checkstyle:checkstyle -Dcheckstyle.failOnViolation=false'
                    }
                }
            }
        }
    }

    stage('Checkstyle and JaCoCo Reports') {
        parallel {
            stage('Checkstyle') {
                steps {
                    script {
                        recordIssues(tools: [checkStyle(pattern: '**/target/checkstyle-result.xml')])
                    }
                }
            }
            stage('JaCoCo') {
                steps {
                    jacoco execPattern: '**/target/jacoco.exec',
                           classPattern: '**/target/classes',
                           sourcePattern: '**/src/main/java',
                           inclusionPattern: '**/*.class'
                }
            }
        }
    }

    stage('Install') {
        steps {
            script {
                dir(POM_LOC) {
                    if (isUnix()) {
                        sh 'mvn install -DskipTests -DskipITs -DskipPitest'
                    } else {
                        bat 'mvn install -DskipTests -DskipITs -DskipPitest'
                    }
                }
            }
        }
    }
}
