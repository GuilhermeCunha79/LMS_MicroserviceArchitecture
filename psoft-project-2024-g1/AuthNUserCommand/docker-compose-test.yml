services:
  users:
    image: lmsusers:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8094-8097:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=bootstrap, relational, firebase
      - spring.datasource.url=jdbc:postgresql://postgres_in_lms_network_user:${POSTGRES_PORT:-5432}/test_users
      - spring.datasource.username=postgres
      - spring.datasource.password=password
      - file.upload-dir=/tmp/uploads-psoft-g1-instance1
    networks:
      - lms_network2
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml
      - "uploaded_files_volume:/tmp"
    depends_on:
      - postgres_in_lms_network_user

  postgres_in_lms_network_user:
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5447-5450:5432"
    volumes:
      - "postgres_volume:/var/lib/postgresql/data"
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lms_network2
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s
    deploy:
      mode: replicated
      replicas: 2

  nginx_user:
    image: nginx:latest
    restart: unless-stopped
    deploy:
      replicas: 1
    ports:
      - "81:80"
      - "444:443"
    networks:
      - lms_network2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
  uploaded_files_volume:
  postgres_volume:

networks:
  lms_network2:
    external: true
