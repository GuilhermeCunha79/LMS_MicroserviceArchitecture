services:
    users_prod:
        image: patxic0/images-repository-lms/lmsusers:latest
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8043-8047:8080"
        environment:
            SPRING_PROFILES_ACTIVE: prod, bootstrap, relational, firebase
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_in_lms_network_user_prod:5432/prod_users_{{.Task.Slot}}?currentSchema=public
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: password
            SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
            SPRING_JPA_HIBERNATE_DDL_AUTO: update
        networks:
            - lms_network2
        deploy:
            replicas: 3
            update_config:
                parallelism: 1
                delay: 10s
                max_failure_ratio: 0.2
                failure_action: rollback
                order: stop-first
        volumes:
            - ./src:/app/src
            - ./pom.xml:/app/pom.xml
            - "uploaded_files_volume_user:/tmp"

    postgres_in_lms_network_user_prod:
        image: postgres:latest
        restart: on-failure
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        ports:
            - "5347-5351:5432"
        volumes:
            - "postgres_volume_user:/var/lib/postgresql/data"
        networks:
            - lms_network2
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "postgres" ]
            interval: 10s
            retries: 5
            timeout: 5s
        deploy:
            replicas: 3

    nginx_user_prod:
        image: nginx:latest
        restart: unless-stopped
        deploy:
            replicas: 1
        ports:
            - "82:80"
            - "445:443"
        networks:
            - lms_network2
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
    uploaded_files_volume_user:
    postgres_volume_user:

networks:
    lms_network2:
        external: true
