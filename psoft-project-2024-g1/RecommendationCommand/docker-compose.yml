services:
    recommendationcommand:
      image: recommendationcommand:latest
      build:
        context: .
        dockerfile: Dockerfile
      ports:
        - "8093:8080"
      environment:
        SPRING_PROFILES_ACTIVE: bootstrap, relational
      networks:
        - lms_network2
      volumes:
        - "uploaded_files_volume_recommendationcommand:/tmp"
      deploy:
        mode: replicated
        replicas: 2

    postgres_in_lms_network:
      image: postgres:latest
      restart: unless-stopped
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
      deploy:
        replicas: 2
      ports:
        - "5449-5457:5432"
      volumes:
        - "postgres_volume:/var/lib/postgresql/data"
      networks:
        - lms_network2
      healthcheck:
        test: [ "CMD", "pg_isready", "-U", "postgres" ]
        interval: 10s
        retries: 5
        timeout: 5s

    rabbitmq_in_lms_network:
      image: rabbitmq:latest
      restart: unless-stopped
      ports:
        - "5679:5672" # RabbitMQ main port
        - "15679:15672" # RabbitMQ management UI
      environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
      networks:
        - lms_network2
      healthcheck:
        test: [ "CMD", "rabbitmqctl", "status" ]
        interval: 10s
        retries: 5
        timeout: 5s

networks:
  lms_network2:
    external: true

volumes:
  uploaded_files_volume_recommendationcommand:
  postgres_volume: