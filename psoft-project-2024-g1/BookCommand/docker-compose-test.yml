services:
  bookcommanda:
    image: patxic0/images-repository-lms/bookcommand:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8055-8059:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=bootstrap, relational, firebase, IDService1
      #- spring.datasource.url=jdbc:h2:mem:books_2
      - spring.datasource.url=jdbc:postgresql://postgres_in_lms_network_bookcommand:${POSTGRES_PORT:-5432}/test_books
      - spring.datasource.username=postgres
      - spring.datasource.password=password
      - file.upload-dir=/tmp/uploads-psoft-g1-instance1
      - spring.rabbitmq.host=rabbitmq_in_lms_network
      - spring.rabbitmq.port=5672
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - lms_network2
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml

  postgres_in_lms_network_bookcommand:
    image: postgres:latest
    environment:
      POSTGRES_DB: test_books
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5451-5455:5432"
    networks:
      - lms_network2
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - postgres_volume_bookCommand:/var/lib/postgresql/data

  nginx_bookCommand:
    image: nginx:latest
    restart: unless-stopped
    deploy:
      replicas: 1
    ports:
      - "83:80"
      - "446:443"
    networks:
      - lms_network2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

networks:
  lms_network2:
    external: true

volumes:
  postgres_volume_bookCommand: