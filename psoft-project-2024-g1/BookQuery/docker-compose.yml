services:
    bookquery:
        image: bookquery:latest
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8085:8080"
        environment:
            SPRING_PROFILES_ACTIVE: bootstrap, mongo, IDService1
            SPRING_DATA_MONGODB_URI: mongodb://admin:password@mongo_book_query:27017/bookquery
        networks:
            - lms_network2
        volumes:
            - "uploaded_files_volume_bookquery:/tmp"
        deploy:
            mode: replicated
            replicas: 1
        depends_on:
            - mongo_book_query


    mongo_book_query:
        image: mongo:latest
        ports:
            - "27017-27023:27017" # Porta do MongoDB exposta para o host
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: password
        networks:
            - lms_network2
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - mongo_data:/data/db # PersistÃªncia de dados
        healthcheck:
            test: [ "CMD", "mongo", "--eval" ]
            interval: 10s
            retries: 5
            timeout: 5s

    mongo-express:
        image: mongo-express:latest
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: admin
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
            ME_CONFIG_MONGODB_URL: mongodb://admin:password@localhost:27017/bookquery
            ME_CONFIG_BASICAUTH: "false"
        networks:
            - lms_network2
        deploy:
            mode: replicated
            replicas: 1

networks:
    lms_network2:
        external: true

volumes:
    uploaded_files_volume_bookquery:
    postgres_volume:
    mongo_data: